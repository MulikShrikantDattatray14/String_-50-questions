Problem Description
Given two binary strings A and B. Return their sum (also a binary string).


Problem Constraints
1 <= length of A <= 105

1 <= length of B <= 105

A and B are binary strings



Input Format
The two argument A and B are binary strings.



Output Format
Return a binary string denoting the sum of A and B



Example Input
Input 1:
A = "100"
B = "11"
Input 2:
A = "110"
B = "10"


Example Output
Output 1:
"111"
Output 2:
"1000"


Example Explanation
For Input 1:
The sum of 100 and 11 is 111.
For Input 2:
 
The sum of 110 and 10 is 1000.

================================================================================================================================================================================

function addBinary(A, B) {
    // start adding from the 0th bit . i.e last index in both the string
    let i = A.length - 1;
    let j = B.length - 1;

    let ans = "";
    let carry = 0;
    let sum = 0;

    // we add bits from the rightmost bit to the leftmost bit
    while (i >= 0 || j >= 0 || carry == 1) {
        sum = carry;
        if (i >= 0) sum += Number(A[i]);
        if (j >= 0) sum += Number(B[j]);
        // here ans is string , so value gets concatenated and does not get added.
        ans = ans + (sum % 2);
        carry = parseInt(sum / 2);
        i--;
        j--;
    }

    return ans.split("").reverse().join("");
}
A = "110";
B = "10";
let ans = addBinary(A, B);
console.log(ans);
