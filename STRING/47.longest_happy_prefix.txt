A string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).

Given a string s, return the longest happy prefix of s. Return an empty string "" if no such prefix exists.

 

Example 1:

Input: s = "level"
Output: "l"
Explanation: s contains 4 prefix excluding itself ("l", "le", "lev", "leve"), and suffix ("l", "el", "vel", "evel"). The largest prefix which is also suffix is given by "l".
Example 2:

Input: s = "ababab"
Output: "abab"
Explanation: "abab" is the largest prefix which is also suffix. They can overlap in the original string.
 

Constraints:

1 <= s.length <= 105
s contains only lowercase English letters.

================================================================================================================================================================================================================================

//https://leetcode.com/problems/longest-happy-prefix/submissions/1170314784/
function computeLPS(txt) {
 
  let n = txt.length;
  let LPS = [];
  LPS[0] = 0;
  for (let i = 1; i < n; i++) {
    let x = LPS[i - 1];

    while (txt[i] != txt[x]) {
      if (x == 0) {
        x = -1;
        break;
      }

      x = LPS[x - 1];
    }

    LPS[i] = x + 1;
  }

  return LPS;
}

let pattern = "ababab";
let lps = computeLPS(pattern);
let last = lps[lps.length - 1];

let sub = pattern.substring(0, last);
console.log(sub);
