Input:

 ‘text’ = “abcdecd”, ‘pat’ = “cd” 

Output: 2

Explanation:
“cd” occurs for the first time in “abcdecd” at index 2. Hence the output is 2.

=====================================================================================
text = "abcdecshrid";
pat = "shri";

let ans = strstr(text, pat);
console.log(ans);
function strstr(haystack, needle) {
  for (let i = 0; i < haystack.length; i++) {
    if (haystack.charAt(i) === needle.charAt(0)) {
      let j = 0; // needle
      let k = i; // haystack

      while (
        j < needle.length &&
        k < haystack.length &&
        needle.charAt(j) === haystack.charAt(k)
      ) {
        j++;
        k++;
        if (j === needle.length) return i;
      }
    }
  }
  return -1; // Not found
}

=================================================================================
approach-2 : -using kmp :


let text = "abshricdecshrid";
let pat = "shri";


let ans = (kmpSearch(pat, text))
console.log(ans)

function computeLPS(txt) {
    // logic :- st[i]==st[lps[i-1]];lps[i]=lps[i-1]+1;
    let n = txt.length;
    let LPS = [];
    LPS[0] = 0;
    for (let i = 1; i < n; i++) {
        let x = LPS[i - 1];
        while (txt[i] !== txt[x]) {
            // search backwards
            if (x === 0) {
                x = -1;
                break;
            }
            x = LPS[x - 1];// take x backwards
        }
        LPS[i] = x + 1;
    }
    return LPS;
}

function kmpSearch(pattern, text) {
    let m = pattern.length;
    let n = text.length;
    let lps = computeLPS(pattern);

    let i = 0;
    let j = 0;

    while (i < n) {
        if (pattern[j] === text[i]) {
            i++;
            j++;
        }

        if (j === m) {
            return (i - j)

            j = lps[j - 1];
        } else if (i < n && pattern[j] !== text[i]) {
            if (j !== 0) {
                j = lps[j - 1];
            } else {
                i++;
            }
        }
    }
    return -1
}
