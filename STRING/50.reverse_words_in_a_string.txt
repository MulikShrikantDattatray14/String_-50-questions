Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.


leetcode : 151. Reverse Words in a String: https://leetcode.com/problems/reverse-words-in-a-string/


function reverseWords(s) {
  let words = s.trim().split(/\s+/); // Split the string into words, trimming leading and trailing spaces
  words.reverse(); // Reverse the order of the words
  return words.join(" "); // Join the words with a single space
}

//   // Example usage:
//   console.log(reverseWords("the sky is blue")); // Output: "blue is sky the"
//   console.log(reverseWords("  hello world  ")); // Output: "world hello"
//console.log(reverseWords("a good   example")); // Output: "example good a".

//


================================================================================================================================================================================

//.split(/\s+/): This part splits the trimmed string into an array of substrings using a regular expression as the delimiter. In this case, the regular expression /\s+/ is used. \s is a special character in regular expressions that matches any whitespace character, such as spaces, tabs, and line breaks. + is a quantifier that matches one or more occurrences of the preceding element (in this case, whitespace characters).

// So, /\s+/ matches one or more consecutive whitespace characters.

//================================================================================================================================================================================